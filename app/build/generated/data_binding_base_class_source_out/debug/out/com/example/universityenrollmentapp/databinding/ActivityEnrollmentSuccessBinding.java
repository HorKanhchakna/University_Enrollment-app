// Generated by view binder compiler. Do not edit!
package com.example.universityenrollmentapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.universityenrollmentapp.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEnrollmentSuccessBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialToolbar appBar;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final ImageView checkmarkImageView;

  @NonNull
  public final TextView confirmationTextView;

  @NonNull
  public final Button exitButton;

  @NonNull
  public final TextView successTextView;

  @NonNull
  public final Button viewDetailsButton;

  private ActivityEnrollmentSuccessBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialToolbar appBar, @NonNull BottomNavigationView bottomNavigation,
      @NonNull ImageView checkmarkImageView, @NonNull TextView confirmationTextView,
      @NonNull Button exitButton, @NonNull TextView successTextView,
      @NonNull Button viewDetailsButton) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.bottomNavigation = bottomNavigation;
    this.checkmarkImageView = checkmarkImageView;
    this.confirmationTextView = confirmationTextView;
    this.exitButton = exitButton;
    this.successTextView = successTextView;
    this.viewDetailsButton = viewDetailsButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEnrollmentSuccessBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEnrollmentSuccessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_enrollment_success, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEnrollmentSuccessBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBar;
      MaterialToolbar appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.bottomNavigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.checkmarkImageView;
      ImageView checkmarkImageView = ViewBindings.findChildViewById(rootView, id);
      if (checkmarkImageView == null) {
        break missingId;
      }

      id = R.id.confirmationTextView;
      TextView confirmationTextView = ViewBindings.findChildViewById(rootView, id);
      if (confirmationTextView == null) {
        break missingId;
      }

      id = R.id.exitButton;
      Button exitButton = ViewBindings.findChildViewById(rootView, id);
      if (exitButton == null) {
        break missingId;
      }

      id = R.id.successTextView;
      TextView successTextView = ViewBindings.findChildViewById(rootView, id);
      if (successTextView == null) {
        break missingId;
      }

      id = R.id.viewDetailsButton;
      Button viewDetailsButton = ViewBindings.findChildViewById(rootView, id);
      if (viewDetailsButton == null) {
        break missingId;
      }

      return new ActivityEnrollmentSuccessBinding((ConstraintLayout) rootView, appBar,
          bottomNavigation, checkmarkImageView, confirmationTextView, exitButton, successTextView,
          viewDetailsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
